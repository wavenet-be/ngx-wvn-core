var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/guards/AuthenticationGuard.html",[0,1.284,1,1.284]],["body/guards/AuthenticationGuard.html",[0,0.837,1,1.42,2,0.951,3,0.345,4,0.497,5,0.345,6,0.286,7,0.74,8,0.345,9,0.837,10,2.716,11,2.433,12,2.716,13,2.235,14,2.558,15,1.601,16,1.601,17,0.601,18,0.951,19,1.364,20,2.558,21,1.637,22,0.951,23,1.246,24,0.837,25,1.246,26,1.637,27,0.071,28,1.637,29,1.137,30,1.364,31,1.246,32,1.246,33,1.601,34,1.012,35,1.448,36,1.601,37,1.601,38,3.801,39,4.264,40,3.987,41,0.951,42,1.947,43,1.979,44,2.342,45,2.943,46,1.86,47,2.29,48,2.943,49,2.436,50,1.601,51,0.951,52,2.074,53,1.601,54,1.601,55,0.951,56,1.601,57,1.311,58,0.951,59,1.012,60,1.894,61,1.601,62,0.582,63,0.951,64,1.012,65,1.601,66,0.951,67,1.601,68,1.246,69,1.601,70,0.951,71,1.601,72,1.246,73,1.601,74,1.601,75,1.246,76,1.601,77,0.951,78,0.951,79,0.414,80,0.74,81,0.74,82,0.951,83,0.601,84,0.951,85,0.74,86,1.246,87,0.74,88,0.74,89,0.74,90,0.497,91,0.951,92,0.904,93,0.482,94,0.345,95,0.74,96,0.951,97,0.601,98,0.601,99,0.345,100,0.414,101,0.74,102,2.402,103,0.601,104,1.86,105,1.601,106,0.951,107,0.951,108,0.951,109,0.951,110,0.951,111,1.601,112,0.951,113,0.951,114,0.951,115,0.951,116,0.951,117,0.951,118,0.951,119,1.601,120,0.951,121,0.951,122,0.951,123,0.014,124,0.024,125,0.014]],["title/injectables/AuthenticationService.html",[19,1.07,93,0.739]],["body/injectables/AuthenticationService.html",[3,0.448,4,0.645,5,0.448,6,0.372,8,0.448,9,1.038,14,2.22,19,0.865,21,1.835,24,1.038,26,1.038,27,0.071,28,1.038,29,1.135,30,0.865,31,1.545,32,1.937,34,1.975,35,1.65,42,1.491,43,2.11,46,1.803,47,0.961,49,2.598,57,2.218,59,2.307,60,2.22,64,0.78,68,2.432,75,2.598,79,0.865,80,1.545,85,1.545,90,1.97,92,1.085,93,0.598,94,0.448,97,0.78,98,0.78,99,0.448,100,0.538,102,1.255,104,2.11,123,0.018,124,0.029,125,0.018,126,0.78,127,0.961,128,1.545,129,2.49,130,2.49,131,3.339,132,1.985,133,1.985,134,2.852,135,1.234,136,1.985,137,1.937,138,1.234,139,3.339,140,2.852,141,1.985,142,1.234,143,3.008,144,1.234,145,2.49,146,1.937,147,1.234,148,2.852,149,1.985,150,2.852,151,1.234,152,2.49,153,1.985,154,1.234,155,0.961,156,1.545,157,1.234,158,0.961,159,1.234,160,1.234,161,0.961,162,1.234,163,1.234,164,0.961,165,1.234,166,0.961,167,1.234,168,0.961,169,1.234,170,1.234,171,1.234,172,1.234,173,1.545,174,1.234,175,1.234,176,1.234,177,0.961,178,1.234,179,1.234,180,0.961,181,0.961,182,1.234,183,1.234,184,1.234,185,1.234,186,1.234,187,1.234,188,2.49,189,1.234,190,1.234,191,1.234,192,1.234,193,0.78,194,1.234,195,1.234]],["title/modules/NgxWvnCoreModule.html",[83,1.551,196,1.551]],["body/modules/NgxWvnCoreModule.html",[3,1.192,5,1.192,6,0.988,27,0.07,92,1.43,94,1.192,99,1.192,100,1.43,123,0.048,124,0.059,125,0.048,196,2.518,197,2.075,198,3.283,199,2.555,200,3.283,201,3.984,202,2.555,203,3.283,204,2.555]],["title/injectables/PageTitleService.html",[93,0.739,205,1.284]],["body/injectables/PageTitleService.html",[3,0.81,4,1.166,5,0.81,6,0.671,8,0.81,9,1.619,13,1.409,17,1.409,20,3.252,21,1.619,26,1.166,27,0.071,28,1.166,29,0.81,30,0.971,42,1.166,44,2.01,62,0.81,64,2.248,79,0.971,81,1.735,86,2.409,87,1.735,88,1.735,89,1.735,92,1.55,93,0.932,94,0.81,95,1.735,97,1.409,98,1.409,99,0.81,100,0.971,103,1.409,123,0.033,124,0.046,125,0.033,126,1.409,156,1.735,205,1.86,206,2.768,207,1.735,208,3.843,209,2.229,210,2.84,211,2.229,212,2.229,213,1.735,214,1.409,215,2.229,216,2.229,217,2.229,218,2.229,219,2.229,220,2.229,221,2.229,222,3.096,223,2.229,224,2.229,225,2.229,226,2.229,227,1.735,228,2.229,229,2.229]],["title/interfaces/User.html",[35,0.892,230,1.284]],["body/interfaces/User.html",[3,0.868,5,0.868,6,0.72,8,0.868,27,0.072,29,1.503,30,1.86,35,1.18,57,2.848,72,2.528,90,2.233,99,0.868,123,0.035,124,0.048,125,0.035,128,2.528,137,2.871,161,3.081,164,3.323,166,3.323,168,3.323,230,1.25,231,2.391,232,1.861,233,3.249,234,2.528,235,3.249]],["title/interceptors/UtcDateTransformInterceptor.html",[236,1.551,237,1.284]],["body/interceptors/UtcDateTransformInterceptor.html",[3,0.54,4,0.777,5,0.54,6,0.448,8,0.54,9,1.202,13,1.776,17,0.94,21,1.47,23,1.789,24,1.202,26,1.47,27,0.072,28,1.47,29,0.835,30,1.225,42,1.202,43,0.94,59,1.453,79,0.648,92,1.225,93,0.692,94,0.54,99,0.54,100,0.648,101,1.157,102,1.999,103,0.94,104,1.776,123,0.022,124,0.034,125,0.022,146,2.187,155,1.157,173,1.157,177,1.157,181,1.157,193,0.94,227,1.157,236,1.453,237,1.654,238,1.487,239,2.461,240,2.036,241,1.157,242,2.299,243,3.163,244,2.299,245,1.487,246,3.163,247,1.487,248,2.661,249,2.299,250,2.811,251,2.299,252,1.487,253,3.163,254,3.163,255,4.156,256,2.299,257,3.163,258,3.163,259,3.163,260,1.487,261,2.187,262,2.187,263,3.163,264,3.163,265,2.299,266,1.487,267,1.487,268,1.157,269,1.487,270,1.789,271,1.487,272,1.487,273,1.487,274,1.487,275,1.487,276,2.299,277,1.487,278,1.157,279,2.299,280,1.487,281,1.487,282,1.487,283,2.299,284,2.299,285,2.299,286,1.487,287,1.487,288,2.299,289,1.487,290,1.487,291,2.299,292,1.789,293,1.487,294,1.487]],["title/coverage.html",[295,2.573]],["body/coverage.html",[0,1.568,1,1.568,6,0.903,7,2.334,19,1.307,24,1.568,27,0.068,29,1.089,35,1.089,93,1.134,123,0.044,124,0.055,125,0.044,127,2.334,205,1.568,206,2.334,207,2.334,230,1.568,232,2.334,234,2.334,236,1.896,237,1.568,239,2.334,240,1.568,241,2.334,292,2.334,295,2.334,296,2.334,297,2.999,298,3.768,299,3.768,300,2.999,301,2.999,302,2.999,303,2.999,304,2.999,305,2.999,306,2.999]],["title/dependencies.html",[307,2.071,308,1.858]],["body/dependencies.html",[27,0.069,94,1.28,123,0.052,124,0.061,125,0.052,278,2.742,308,2.227,309,3.523,310,4.156,311,3.523,312,3.523]],["title/index.html",[8,0.752,313,1.612,314,1.612]],["body/index.html",[27,0.056,79,1.662,123,0.045,124,0.056,125,0.045,158,2.968,199,2.968,296,3.234,313,2.38,314,2.38,315,3.058,316,4.156,317,3.058,318,3.058,319,3.058,320,3.058,321,2.968,322,1.599,323,1.599,324,3.058,325,3.058,326,3.058,327,3.058,328,3.814,329,3.814,330,3.814,331,3.058,332,3.058,333,3.058,334,3.058,335,3.058]],["title/modules.html",[197,2.09]],["body/modules.html",[27,0.062,123,0.054,124,0.062,125,0.054,196,2.305,197,2.305,321,2.838,336,3.647,337,3.647]],["title/overview.html",[338,2.573]],["body/overview.html",[0,1.753,27,0.059,83,2.55,123,0.049,124,0.059,125,0.049,126,2.119,193,2.736,202,2.609,204,2.609,230,1.753,270,2.609,308,2.119,338,2.609,339,3.353,340,3.353,341,4.035,342,3.353,343,3.353,344,3.353]],["title/additional-documentation/authentication.html",[25,1.612,62,0.752,323,1.083]],["body/additional-documentation/authentication.html",[1,1.782,19,1.485,27,0.06,35,1.48,44,2.131,46,2.154,90,1.782,123,0.05,124,0.06,125,0.05,143,2.652,180,3.171,214,2.575,322,1.782,345,4.075,346,2.154]],["title/additional-documentation/date.html",[62,0.752,240,1.083,323,1.083]],["body/additional-documentation/date.html",[27,0.062,123,0.053,124,0.062,125,0.053,237,1.874,240,1.874,248,2.789,261,2.789,262,2.789,268,2.789,322,1.874,346,2.265]],["title/additional-documentation/title.html",[62,0.752,210,1.309,323,1.083]],["body/additional-documentation/title.html",[27,0.061,34,2.214,44,1.832,62,1.504,123,0.052,124,0.061,125,0.052,205,1.832,210,2.618,213,2.726,214,2.214,322,1.832,346,2.214,347,3.504]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{},"additional-documentation/title.html":{}}}],["0",{"_index":292,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["0/3",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":193,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"overview.html":{}}}],["1.10.0",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":344,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":291,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["3/4",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["9.1.1",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":180,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/authentication.html":{}}}],["activatedroutesnapshot",{"_index":38,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["activationend",{"_index":222,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["additional",{"_index":323,"title":{"additional-documentation/authentication.html":{},"additional-documentation/date.html":{},"additional-documentation/title.html":{}},"body":{"index.html":{}}}],["address",{"_index":233,"title":{},"body":{"interfaces/User.html":{}}}],["angular",{"_index":319,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":278,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":277,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["angular/core",{"_index":94,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":223,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["angular/router",{"_index":95,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{}}}],["application",{"_index":79,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"index.html":{}}}],["appmodule",{"_index":272,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["array",{"_index":137,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["authenticated",{"_index":75,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":25,"title":{"additional-documentation/authentication.html":{}},"body":{"guards/AuthenticationGuard.html":{}}}],["authenticationguard",{"_index":1,"title":{"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"additional-documentation/authentication.html":{}}}],["authenticationservice",{"_index":19,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"additional-documentation/authentication.html":{}}}],["available",{"_index":321,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":267,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["based",{"_index":214,"title":{},"body":{"injectables/PageTitleService.html":{},"additional-documentation/authentication.html":{},"additional-documentation/title.html":{}}}],["behaviorsubject",{"_index":152,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(null",{"_index":153,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["body",{"_index":255,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["body[key",{"_index":288,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["bootstrap",{"_index":340,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":337,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":224,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["canactivate",{"_index":10,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canactivate(route",{"_index":37,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canactivatechild",{"_index":11,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canactivatechild(childroute",{"_index":50,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canload",{"_index":12,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canload(route",{"_index":54,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["case",{"_index":67,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["certain",{"_index":78,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["change",{"_index":182,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["check",{"_index":139,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["childroute",{"_index":52,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["class",{"_index":100,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["classes",{"_index":346,"title":{},"body":{"additional-documentation/authentication.html":{},"additional-documentation/date.html":{},"additional-documentation/title.html":{}}}],["clear",{"_index":131,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["clear():void",{"_index":194,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["command",{"_index":333,"title":{},"body":{"index.html":{}}}],["component",{"_index":87,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{}}}],["componentclassname",{"_index":88,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{}}}],["configuration",{"_index":76,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["configure",{"_index":177,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["console.log('anonymous",{"_index":174,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('logged",{"_index":175,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["const",{"_index":285,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["constructor(authenticationservice",{"_index":18,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(pipe",{"_index":245,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["constructor(router",{"_index":209,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["convert",{"_index":253,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["convertdates",{"_index":242,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["convertdates(body",{"_index":251,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["core",{"_index":316,"title":{},"body":{"index.html":{}}}],["core.module.ts",{"_index":200,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["coverage",{"_index":295,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":23,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["current",{"_index":34,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"additional-documentation/title.html":{}}}],["data",{"_index":89,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{}}}],["date",{"_index":240,"title":{"additional-documentation/date.html":{}},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"additional-documentation/date.html":{}}}],["dates",{"_index":254,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["decimalpipe",{"_index":246,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["declarations",{"_index":202,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"overview.html":{}}}],["default",{"_index":145,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["define",{"_index":216,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["defined",{"_index":21,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["definitions",{"_index":215,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["demo",{"_index":328,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":308,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":331,"title":{},"body":{"index.html":{}}}],["description",{"_index":31,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["documentation",{"_index":296,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":169,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["during",{"_index":269,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["each",{"_index":217,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["edit",{"_index":84,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["email",{"_index":164,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["event",{"_index":226,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["event.snapshot.data.title",{"_index":228,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["example",{"_index":159,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["explanations",{"_index":327,"title":{},"body":{"index.html":{}}}],["export",{"_index":99,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["exports",{"_index":204,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"overview.html":{}}}],["false",{"_index":111,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["feature",{"_index":325,"title":{},"body":{"index.html":{}}}],["file",{"_index":6,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["first_allowed_role','second_allowed_role",{"_index":91,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["firstname",{"_index":166,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["follow",{"_index":85,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["forbidden",{"_index":68,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["forbiddenredirecturl",{"_index":129,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getting",{"_index":313,"title":{"index.html":{}},"body":{"index.html":{}}}],["given",{"_index":59,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["go",{"_index":81,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{}}}],["graph",{"_index":336,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":0,"title":{"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["hasanyrole",{"_index":132,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasanyrole(roles",{"_index":136,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasrole",{"_index":133,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasrole(role",{"_index":141,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["here",{"_index":158,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["http",{"_index":261,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"additional-documentation/date.html":{}}}],["http_interceptors",{"_index":273,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["httphandler",{"_index":259,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["httpinterceptor",{"_index":276,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["httprequest",{"_index":257,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["identifier",{"_index":234,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["identity",{"_index":36,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["if(user",{"_index":172,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["implements",{"_index":101,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["import",{"_index":92,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["import(\"@angular/router\").urltree",{"_index":107,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["import(\"rxjs\").observable",{"_index":108,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["imports",{"_index":203,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["init",{"_index":208,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["initialize",{"_index":219,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["injectable",{"_index":93,"title":{"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"overview.html":{}}}],["install",{"_index":329,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":227,"title":{},"body":{"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["intercept",{"_index":243,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["intercept(req",{"_index":256,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["interceptor",{"_index":236,"title":{"interceptors/UtcDateTransformInterceptor.html":{}},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":238,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["interface",{"_index":230,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":231,"title":{},"body":{"interfaces/User.html":{}}}],["isauthenticated",{"_index":134,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["j.doe",{"_index":162,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["j.doe@domain.tld",{"_index":165,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["john",{"_index":167,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["key",{"_index":286,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["lastname",{"_index":168,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["legend",{"_index":339,"title":{},"body":{"overview.html":{}}}],["level",{"_index":326,"title":{},"body":{"index.html":{}}}],["library",{"_index":318,"title":{},"body":{"index.html":{}}}],["logged",{"_index":46,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"additional-documentation/authentication.html":{}}}],["login",{"_index":150,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginredirecturl",{"_index":130,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":124,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{},"additional-documentation/title.html":{}}}],["menu",{"_index":324,"title":{},"body":{"index.html":{}}}],["methods",{"_index":9,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["missing",{"_index":149,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["models/user.model",{"_index":187,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["module",{"_index":83,"title":{"modules/NgxWvnCoreModule.html":{}},"body":{"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["modules",{"_index":197,"title":{"modules.html":{}},"body":{"modules/NgxWvnCoreModule.html":{},"modules.html":{}}}],["multi",{"_index":275,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["my_title",{"_index":218,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["name",{"_index":28,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["new",{"_index":24,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["next",{"_index":258,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["next.handle(req",{"_index":281,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["ngmodule",{"_index":201,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["ngoninit",{"_index":220,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["ngx",{"_index":315,"title":{},"body":{"index.html":{}}}],["ngxwvncoremodule",{"_index":196,"title":{"modules/NgxWvnCoreModule.html":{}},"body":{"modules/NgxWvnCoreModule.html":{},"modules.html":{}}}],["npm",{"_index":330,"title":{},"body":{"index.html":{}}}],["null",{"_index":173,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["object",{"_index":284,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["object.keys(body",{"_index":287,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["optional",{"_index":30,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["order",{"_index":266,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["out",{"_index":343,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":338,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":307,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":62,"title":{"additional-documentation/authentication.html":{},"additional-documentation/date.html":{},"additional-documentation/title.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{},"additional-documentation/title.html":{}}}],["pagetitleservice",{"_index":205,"title":{"injectables/PageTitleService.html":{}},"body":{"injectables/PageTitleService.html":{},"coverage.html":{},"additional-documentation/title.html":{}}}],["param",{"_index":102,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["path",{"_index":86,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{}}}],["peer",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["phase",{"_index":157,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipe",{"_index":250,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["post",{"_index":263,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["private",{"_index":13,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["promise",{"_index":53,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["properties",{"_index":128,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["protect",{"_index":77,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["protected",{"_index":45,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["provide",{"_index":155,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["providedin",{"_index":97,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{}}}],["providers",{"_index":270,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"overview.html":{}}}],["providing",{"_index":33,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["provisioning",{"_index":347,"title":{},"body":{"additional-documentation/title.html":{}}}],["public",{"_index":244,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["put",{"_index":264,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["queryparams",{"_index":120,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["readme",{"_index":4,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["redirect",{"_index":14,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["redirect(redirecturl",{"_index":56,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirectforbidden",{"_index":15,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirectforbidden(route",{"_index":65,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirection",{"_index":178,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["redirecturl",{"_index":61,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["regarding",{"_index":74,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["req",{"_index":265,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["req.method",{"_index":279,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["request",{"_index":262,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"additional-documentation/date.html":{}}}],["required",{"_index":47,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["requirements",{"_index":73,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["reset",{"_index":342,"title":{},"body":{"overview.html":{}}}],["result",{"_index":123,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{},"additional-documentation/title.html":{}}}],["results",{"_index":125,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{},"additional-documentation/title.html":{}}}],["retrieve",{"_index":170,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["return",{"_index":104,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["returns",{"_index":42,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["returnurl",{"_index":121,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["role",{"_index":143,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/authentication.html":{}}}],["role(s",{"_index":48,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["roles",{"_index":90,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"additional-documentation/authentication.html":{}}}],["roles.some(r",{"_index":190,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["root",{"_index":98,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{}}}],["route",{"_index":44,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{},"additional-documentation/authentication.html":{},"additional-documentation/title.html":{}}}],["route.data",{"_index":112,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["route.data.redirectto",{"_index":116,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["route.data.roles",{"_index":113,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["router",{"_index":20,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/PageTitleService.html":{}}}],["routerstatesnapshot",{"_index":40,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["routing",{"_index":82,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["rxjs",{"_index":186,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["s",{"_index":334,"title":{},"body":{"index.html":{}}}],["section",{"_index":271,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["security",{"_index":72,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interfaces/User.html":{}}}],["see",{"_index":322,"title":{},"body":{"index.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{},"additional-documentation/title.html":{}}}],["service",{"_index":32,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["services/authentication.service",{"_index":96,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["set",{"_index":213,"title":{},"body":{"injectables/PageTitleService.html":{},"additional-documentation/title.html":{}}}],["simply",{"_index":181,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["source",{"_index":5,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts",{"_index":7,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:16",{"_index":22,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:32",{"_index":41,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:40",{"_index":55,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:49",{"_index":51,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:58",{"_index":70,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:75",{"_index":66,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:87",{"_index":58,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/models/user.model.ts",{"_index":232,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/lib/authentication/services/authentication.service.ts",{"_index":127,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/lib/authentication/services/authentication.service.ts:13",{"_index":151,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:17",{"_index":147,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:22",{"_index":154,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:28",{"_index":144,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:37",{"_index":138,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:46",{"_index":142,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:53",{"_index":135,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/date/interceptor/utc",{"_index":239,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["src/lib/ngx",{"_index":198,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["src/lib/title/services/page",{"_index":206,"title":{},"body":{"injectables/PageTitleService.html":{},"coverage.html":{}}}],["started",{"_index":314,"title":{"index.html":{}},"body":{"index.html":{}}}],["startup",{"_index":156,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{}}}],["state",{"_index":39,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["state.url",{"_index":122,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["statements",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":57,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["table",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":140,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["test_role",{"_index":163,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.clear();to",{"_index":176,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.forbiddenredirecturl='/my/forbidden/page",{"_index":185,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.hasanyrole(route.data.roles",{"_index":114,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":109,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.authenticationservice.loginredirecturl='/my/login/page",{"_index":184,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.user.next",{"_index":160,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.user.subscribe(user",{"_index":171,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.convertdates(req.body",{"_index":280,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["this.convertdates(value",{"_index":294,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["this.hasrole(r",{"_index":191,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.pagetitleservice.init",{"_index":221,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["this.pipe.transform(value.getdate",{"_index":293,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["this.pipe.transform(value.getmonth",{"_index":290,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["this.redirect(route.data.redirectto",{"_index":117,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirect(this.authenticationservice.forbiddenredirecturl",{"_index":118,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirect(this.authenticationservice.loginredirecturl",{"_index":110,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirectforbidden(route",{"_index":115,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.router.events.subscribe(event",{"_index":225,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["this.router.navigate([redirecturl",{"_index":119,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.title.settitle(event.snapshot.data.title",{"_index":229,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["this.user.next(null",{"_index":195,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value",{"_index":188,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value.roles",{"_index":189,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value.roles.indexof(role",{"_index":192,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.validateauthenticationrequirement(state",{"_index":105,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validateauthenticationrequirement(undefined",{"_index":106,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["title",{"_index":210,"title":{"additional-documentation/title.html":{}},"body":{"injectables/PageTitleService.html":{},"additional-documentation/title.html":{}}}],["title.service.ts",{"_index":207,"title":{},"body":{"injectables/PageTitleService.html":{},"coverage.html":{}}}],["title.service.ts:13",{"_index":212,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["title.service.ts:8",{"_index":211,"title":{},"body":{"injectables/PageTitleService.html":{}}}],["transform",{"_index":249,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["transform.interceptor.ts",{"_index":241,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["transform.interceptor.ts:20",{"_index":260,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["transform.interceptor.ts:31",{"_index":252,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["transform.interceptor.ts:6",{"_index":247,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["transformation",{"_index":268,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"additional-documentation/date.html":{}}}],["true",{"_index":43,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["tslib",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":29,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["typeof",{"_index":283,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["undefined",{"_index":282,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["url",{"_index":60,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["urls",{"_index":179,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["use",{"_index":80,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["useclass",{"_index":274,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["used",{"_index":148,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user",{"_index":35,"title":{"interfaces/User.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/authentication.html":{}}}],["userid",{"_index":161,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["username",{"_index":235,"title":{},"body":{"interfaces/User.html":{}}}],["using",{"_index":332,"title":{},"body":{"index.html":{}}}],["utc",{"_index":248,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"additional-documentation/date.html":{}}}],["utcdatetransforminterceptor",{"_index":237,"title":{"interceptors/UtcDateTransformInterceptor.html":{}},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"additional-documentation/date.html":{}}}],["validate",{"_index":71,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validateauthenticationrequirement",{"_index":16,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validateauthenticationrequirement(state",{"_index":69,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validation",{"_index":345,"title":{},"body":{"additional-documentation/authentication.html":{}}}],["value",{"_index":146,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["value.getfullyear",{"_index":289,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["values",{"_index":183,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["void",{"_index":64,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/PageTitleService.html":{}}}],["wavenet",{"_index":317,"title":{},"body":{"index.html":{}}}],["wavenet/ngx",{"_index":335,"title":{},"body":{"index.html":{}}}],["website",{"_index":320,"title":{},"body":{"index.html":{}}}],["wvn",{"_index":199,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"index.html":{}}}],["yes",{"_index":63,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["zoom",{"_index":341,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/authentication/guards/authentication.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                            \n                                canLoad\n                            \n                            \n                                    Private\n                                redirect\n                            \n                            \n                                    Private\n                                redirectForbidden\n                            \n                            \n                                    Private\n                                validateAuthenticationRequirement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/authentication/guards/authentication.guard.ts:16\n                            \n                        \n\n                \n                    \n                            Create a new authentication guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service providing current user identity\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:32\n                \n            \n\n\n            \n                \n                    Returns true if the route is not protected or if the user is logged and has required role(s)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:49\n                \n            \n\n\n            \n                \n                    Returns true if the route is not protected or if the user is logged and has required role(s)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childRoute\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean |  |  | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:40\n                \n            \n\n\n            \n                \n                    Returns true if the route is not protected or if the user is logged and has required role(s)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirect(redirectUrl: string, state?: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:87\n                \n            \n\n\n            \n                \n                    Redirect the user to the given url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    redirectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        url of the page to which redirect the user\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirectForbidden\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectForbidden(route: Route | ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:75\n                \n            \n\n\n            \n                \n                    Redirect in case the user is forbidden\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            Route | ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateAuthenticationRequirement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAuthenticationRequirement(state: RouterStateSnapshot, route: Route | ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:58\n                \n            \n\n\n            \n                \n                    Validate security requirements regarding authenticated user and route configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n                                    \n                                            Route | ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n        \n            To protect a certain route of your application, you can use the AuthenticationGuard. Go to your routing module and edit the route as follow:  \n{\n    path: 'path-of-the-route',\n    component: ComponentClassName,\n    canLoad: [AuthenticationGuard],\n    canActivate: [AuthenticationGuard],\n    data: {\n      roles: ['FIRST_ALLOWED_ROLE','SECOND_ALLOWED_ROLE']\n    }\n  }\n        \n\n        \n            import {Injectable} from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\nimport {AuthenticationService} from \"../services/authentication.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanLoad, CanActivate, CanActivateChild {\n\n  /**\n   * Create a new authentication guard\n   * @param authenticationService service providing current user identity\n   * @param router\n   */\n  constructor(private authenticationService: AuthenticationService, private router: Router) {\n\n  }\n\n  /**\n   * Returns true if the route is not protected or if the user is logged and has required role(s)\n   * @param route\n   * @param state\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.validateAuthenticationRequirement(state, route);\n  }\n\n  /**\n   * Returns true if the route is not protected or if the user is logged and has required role(s)\n   * @param route\n   */\n  canLoad(route: Route): boolean {\n    return this.validateAuthenticationRequirement(undefined, route);\n  }\n\n  /**\n   * Returns true if the route is not protected or if the user is logged and has required role(s)\n   * @param childRoute\n   * @param state\n   */\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable | Promise {\n    return this.validateAuthenticationRequirement(state, childRoute);\n  }\n\n  /**\n   * Validate security requirements regarding authenticated user and route configuration\n   * @param state\n   * @param route\n   */\n  private validateAuthenticationRequirement(state: RouterStateSnapshot, route: Route | ActivatedRouteSnapshot) {\n    if (!this.authenticationService.isAuthenticated()) {\n      this.redirect(this.authenticationService.loginRedirectUrl, state);\n      return false;\n    }\n    if (!route.data || !route.data.roles || this.authenticationService.hasAnyRole(route.data.roles)) {\n      return true;\n    }\n    this.redirectForbidden(route, state);\n    return false;\n  }\n\n  /**\n   * Redirect in case the user is forbidden\n   * @param route\n   * @param state\n   */\n  private redirectForbidden(route: Route | ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (route.data.redirectTo) {\n      this.redirect(route.data.redirectTo, state);\n    }\n    this.redirect(this.authenticationService.forbiddenRedirectUrl, state);\n  }\n\n  /**\n   * Redirect the user to the given url\n   * @param redirectUrl url of the page to which redirect the user\n   * @param state\n   */\n  private redirect(redirectUrl: string, state?: RouterStateSnapshot) {\n    if (state) {\n      this.router.navigate([redirectUrl], {queryParams: {returnUrl: state.url}});\n    } else {\n      this.router.navigate([redirectUrl]);\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/authentication/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forbiddenRedirectUrl\n                            \n                            \n                                loginRedirectUrl\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                hasAnyRole\n                            \n                            \n                                hasRole\n                            \n                            \n                                isAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:53\n                \n            \n\n\n            \n                \n                    Clear the current logged user if any\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasAnyRole\n                        \n                        \n                    \n                \n            \n            \n                \nhasAnyRole(roles: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:37\n                \n            \n\n\n            \n                \n                    Check if a user has a any of given roles\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the roles to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the user has any of the given roles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRole\n                        \n                        \n                    \n                \n            \n            \n                \nhasRole(role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:46\n                \n            \n\n\n            \n                \n                    Check if a user has a given role\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the role to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the user has the given role\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:28\n                \n            \n\n\n            \n                \n                    Check if the user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the user is authenticated\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forbiddenRedirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/forbidden'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                        Url used to redirect the user when forbidden (missing role)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRedirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/login'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                        Url used to redirect the user when not authenticated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:22\n                            \n                        \n\n                \n                    \n                        Logged user\n\n                    \n                \n\n            \n        \n\n\n    \n\n    \n        You have to provide the current user at startup or login phase of your application. Here is an example:\nthis.authenticationService.user.next({\n  userId: 'j.doe',\n  roles: ['TEST_ROLE'],\n  email: 'j.doe@domain.tld',\n  firstName: 'John',\n  lastName: 'Doe'\n})To retrieve the current user, use the service as follow:\nthis.authenticationService.user.subscribe(user => {\n  if(user == null){\n    console.log('anonymous');\n  }else{\n    console.log('logged');\n  }\n});To clear the current user, use the service as follow:\nthis.authenticationService.clear();To configure the redirection urls (login required and forbidden access), simply change the values of the service at application startup:\nthis.authenticationService.loginRedirectUrl='/my/login/page';\nthis.authenticationService.forbiddenRedirectUrl='/my/forbidden/page';\n    \n\n    \n        import {Injectable} from \"@angular/core\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {User} from \"../models/user.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Url used to redirect the user when not authenticated\n   */\n  loginRedirectUrl: string = '/login';\n  /**\n   * Url used to redirect the user when forbidden (missing role)\n   */\n  forbiddenRedirectUrl: string = '/forbidden';\n\n  /**\n   * Logged user\n   */\n  user: BehaviorSubject = new BehaviorSubject(null);\n\n  /**\n   * Check if the user is authenticated\n   * @return true if the user is authenticated\n   */\n  isAuthenticated(): boolean {\n    return this.user.value != null;\n  };\n\n  /**\n   * Check if a user has a any of given roles\n   * @param roles the roles to test\n   * @return true if the user has any of the given roles\n   */\n  hasAnyRole(roles: Array) : boolean{\n    return this.user.value && this.user.value.roles && roles.some(r => this.hasRole(r));\n  }\n\n  /**\n   * Check if a user has a given role\n   * @param role the role to test\n   * @return true if the user has the given role\n   */\n  hasRole(role: string) : boolean{\n    return this.user.value && this.user.value.roles.indexOf(role) != -1;\n  }\n\n  /**\n   * Clear the current logged user if any\n   */\n  clear():void{\n    this.user.next(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxWvnCoreModule.html":{"url":"modules/NgxWvnCoreModule.html","title":"module - NgxWvnCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxWvnCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-wvn-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: []\n})\nexport class NgxWvnCoreModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageTitleService.html":{"url":"injectables/PageTitleService.html","title":"injectable - PageTitleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageTitleService\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/title/services/page-title.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, title: Title)\n                    \n                \n                        \n                            \n                                Defined in src/lib/title/services/page-title.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/title/services/page-title.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n        To set page title based on the route, go to your route definitions and define a title for each route:\n{\n    path: 'path-of-the-route',\n    component: ComponentClassName,\n    data: {\n      title: '[MY_TITLE]'\n    }\n  }Then initialize the PageTitleService at application startup:\nngOnInit(): void {\n  this.pageTitleService.init();\n}\n    \n\n    \n        import {Injectable} from \"@angular/core\";\nimport {ActivationEnd, Router} from \"@angular/router\";\nimport {Title} from \"@angular/platform-browser\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageTitleService {\n\n  constructor(private router: Router, private title: Title) {\n  }\n\n  init(): void {\n    this.router.events.subscribe(event => {\n      if (event instanceof ActivationEnd) {\n        if (event.snapshot.data.title) {\n          this.title.setTitle(event.snapshot.data.title);\n        }\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/authentication/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                        roles\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Firstname\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Lastname\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Security roles\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier / Username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n\n  /**\n   * Identifier / Username\n   */\n  userId: any;\n  /**\n   * Security roles\n   */\n  roles: Array;\n  /**\n   * Email address\n   */\n  email?: string;\n  /**\n   * Firstname\n   */\n  firstName?: string;\n  /**\n   * Lastname\n   */\n  lastName?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/UtcDateTransformInterceptor.html":{"url":"interceptors/UtcDateTransformInterceptor.html","title":"interceptor - UtcDateTransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  UtcDateTransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/date/interceptor/utc-date-transform.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertDates\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(pipe: DecimalPipe)\n                    \n                \n                        \n                            \n                                Defined in src/lib/date/interceptor/utc-date-transform.interceptor.ts:6\n                            \n                        \n\n                \n                    \n                            Create a new UTC date transform interceptor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pipe\n                                                  \n                                                        \n                                                                        DecimalPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertDates(body)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/date/interceptor/utc-date-transform.interceptor.ts:31\n                \n            \n\n\n            \n                \n                    Convert dates in the given body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/date/interceptor/utc-date-transform.interceptor.ts:20\n                \n            \n\n\n            \n                \n                    Intercept the HTTP request (POST & PUT) and convert UTC dates in body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n        In order to avoid UTC date transformation during http request (PUT & POST), simply configure the UtcDateTransformInterceptor in the providers section of the AppModule of your application.\n    providers: [\n        ...\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: UtcDateTransformInterceptor,\n            multi: true\n        }\n        ...\n    ]\n    \n\n    \n        import {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\n\n@Injectable()\nexport class UtcDateTransformInterceptor implements HttpInterceptor {\n\n  /**\n   * Create a new UTC date transform interceptor\n   * @param pipe\n   */\n  public constructor(private pipe: DecimalPipe) {\n  }\n\n  /**\n   * Intercept the HTTP request (POST & PUT) and convert UTC dates in body\n   * @param req\n   * @param next\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    if (req.method === 'POST' || req.method === 'PUT') {\n      this.convertDates(req.body);\n    }\n    return next.handle(req);\n  }\n\n  /**\n   * Convert dates in the given body\n   * @param body\n   */\n  private convertDates(body) {\n    if (body === null || body === undefined) {\n      return body;\n    }\n\n    if (typeof body !== 'object') {\n      return body;\n    }\n\n    for (const key of Object.keys(body)) {\n      const value = body[key];\n      if (value instanceof Date) {\n        body[key] = `${value.getFullYear()}-${this.pipe.transform(value.getMonth() + 1, \"2.0-0\")}-${this.pipe.transform(value.getDate(), \"2.0-0\")}`;\n      } else if (typeof value === 'object') {\n        this.convertDates(value);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/authentication/guards/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/lib/authentication/models/user.model.ts\n            \n            interface\n            User\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/lib/authentication/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/lib/date/interceptor/utc-date-transform.interceptor.ts\n            \n            interceptor\n            UtcDateTransformInterceptor\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/lib/title/services/page-title.service.ts\n            \n            injectable\n            PageTitleService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : >=9.1.1\n        \n            @angular/core : >=9.1.1\n        \n            tslib : ^1.10.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-wvn-core\nWavenet core library for Angular application.\nDocumentation\nA documentation website is available here. See Additional documentation menu for feature level explanations.\nDemo\nA demo application is available here.\nGetting started\nInstall NPM dependency by using this command:\nnpm install -s @wavenet/ngx-wvn-core\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxWvnCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authentication.html":{"url":"additional-documentation/authentication.html","title":"additional-page - Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRole-based route access validation\nRoute access validation based on roles of logged user. See classes:\n\nUser\nAuthenticationGuard\nAuthenticationService\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/date.html":{"url":"additional-documentation/date.html","title":"additional-page - Date","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nUTC Date transformation in HTTP request\nSee classes:\n\nUtcDateTransformInterceptor\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/title.html":{"url":"additional-documentation/title.html","title":"additional-page - Title","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nPage title provisioning\nTo set the page title based on the current route, see classes:\n\nPageTitleService\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
