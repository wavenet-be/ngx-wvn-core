var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/guards/AuthenticationGuard.html",[0,1.095,1,0.833]],["body/guards/AuthenticationGuard.html",[1,0.615,2,0.886,3,0.373,4,0.373,5,0.279,6,0.648,7,0.373,8,1.068,9,1.582,10,2.166,11,1.582,12,3.247,13,1.462,14,1.462,15,1.462,16,1.462,17,0.886,18,0.886,19,0.813,20,2.728,21,2.084,22,0.886,23,2.084,24,0.107,25,2.084,26,1.2,27,1.578,28,1.462,29,3.388,30,3.572,31,3.492,32,0.886,33,2.592,34,1.994,35,2.16,36,1.462,37,0.886,38,1.462,39,1.462,40,1.462,41,0.886,42,1.462,43,0.886,44,1.462,45,1.462,46,1.462,47,1.033,48,0.886,49,0.886,50,1.068,51,1.462,52,0.886,53,1.462,54,0.886,55,1.033,56,0.461,57,0.373,58,0.886,59,0.886,60,0.648,61,0.648,62,0.373,63,0.49,64,0.886,65,1.994,66,1.462,67,0.886,68,0.886,69,0.886,70,1.462,71,0.886,72,0.886,73,1.462,74,0.886,75,0.886,76,0.886,77,0.886,78,0.886,79,0.886,80,0.886,81,0.886,82,1.462,83,0.886,84,0.886,85,0.886,86,0.024,87,0.04,88,0.024]],["title/injectables/AuthenticationService.html",[19,0.623,56,0.623]],["body/injectables/AuthenticationService.html",[3,0.602,4,0.602,5,0.45,7,0.602,8,1.556,19,0.671,21,2.393,23,1.556,24,0.107,25,1.556,26,1.269,27,1.178,34,2.061,35,1.86,47,1.812,50,1.044,55,1.408,56,0.671,57,0.602,60,1.044,61,1.044,62,0.602,63,0.791,65,1.86,86,0.039,87,0.058,88,0.039,89,1.429,90,1.044,91,1.556,92,2.545,93,2.545,94,0.889,95,2.061,96,2.129,97,2.129,98,2.82,99,1.429,100,2.129,101,1.86,102,1.429,103,0.791,104,2.129,105,1.429,106,1.044,107,1.429,108,2.545,109,2.545,110,1.556,111,1.429,112,1.556,113,1.429,114,2.545,115,1.556,116,2.129,117,1.429,118,1.429,119,1.429,120,2.545,121,1.044,122,1.429,123,1.429,124,1.429,125,1.429,126,1.044,127,1.429]],["title/modules/NgxWvnCoreModule.html",[128,1.095,129,1.095]],["body/modules/NgxWvnCoreModule.html",[3,1.099,4,1.099,5,0.823,24,0.105,55,1.445,57,1.099,62,1.099,63,1.445,86,0.071,87,0.087,88,0.071,129,1.778,130,1.445,131,2.612,132,1.908,133,2.612,134,3.213,135,1.908,136,2.612,137,1.908]],["title/interfaces/User.html",[94,0.623,138,0.833]],["body/interfaces/User.html",[3,0.889,4,0.889,5,0.666,7,0.889,24,0.102,26,1.47,27,1.987,47,2.084,62,0.889,86,0.057,87,0.076,88,0.057,91,2.05,94,0.884,101,2.301,103,1.857,138,0.889,139,2.112,140,1.544,141,2.452,142,2.452,143,2.452,144,2.452]],["title/coverage.html",[145,1.961]],["body/coverage.html",[0,1.419,1,1.079,5,0.808,6,1.873,19,0.808,24,0.1,26,1.079,56,0.808,86,0.069,87,0.086,88,0.069,90,1.873,94,0.808,115,1.873,138,1.079,140,1.873,145,1.873,146,2.564,147,2.564,148,2.564,149,3.451,150,2.564,151,2.564,152,2.564,153,2.564,154,2.564]],["title/dependencies.html",[155,1.66,156,1.314]],["body/dependencies.html",[24,0.103,57,1.196,86,0.077,87,0.091,88,0.077,156,1.572,157,2.841,158,2.841,159,3.381,160,2.841,161,2.841]],["title/index.html",[7,0.698,162,1.66,163,1.213]],["body/index.html",[1,1.163,9,1.204,11,1.204,19,0.519,24,0.096,33,2.019,86,0.045,87,0.064,88,0.045,94,0.871,95,1.204,103,1.308,106,1.204,110,1.204,112,1.727,121,1.204,128,0.912,132,1.727,141,1.204,142,1.204,143,1.204,144,1.204,163,1.204,164,1.648,165,2.763,166,1.648,167,1.648,168,1.648,169,3.195,170,1.648,171,2.363,172,1.204,173,1.648,174,1.648,175,1.648,176,2.363,177,1.648,178,1.648,179,1.648,180,1.648,181,2.763,182,1.648,183,1.648,184,1.648,185,2.763,186,2.363,187,2.363,188,1.648,189,1.648,190,1.648,191,1.648,192,2.763,193,2.363,194,1.648,195,1.648,196,1.648,197,1.648,198,1.648,199,1.648,200,1.648,201,1.648,202,1.648,203,1.648,204,2.763,205,1.648,206,1.648,207,1.648,208,1.648,209,1.648,210,1.648,211,1.648,212,1.648,213,1.648,214,1.648,215,1.648,216,1.648,217,1.648,218,1.648,219,2.363,220,2.363,221,1.648,222,1.648,223,1.648,224,1.648,225,1.648]],["title/modules.html",[130,1.485]],["body/modules.html",[24,0.094,86,0.08,87,0.094,88,0.08,129,1.639,130,1.639,172,2.164,226,2.961,227,2.961]],["title/overview.html",[228,1.961]],["body/overview.html",[0,1.482,24,0.088,56,0.844,86,0.072,87,0.088,88,0.072,126,2.676,128,1.806,135,1.957,137,1.957,138,1.127,156,1.482,228,1.957,229,2.678,230,2.678,231,2.678,232,3.263,233,2.678,234,2.678]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":149,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":151,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":152,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":150,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":126,"title":{},"body":{"injectables/AuthenticationService.html":{},"overview.html":{}}}],["1.10.0",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["9.1.1",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":176,"title":{},"body":{"index.html":{}}}],["activatedroutesnapshot",{"_index":29,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["angular",{"_index":168,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":57,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":58,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["application",{"_index":169,"title":{},"body":{"index.html":{}}}],["array",{"_index":101,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["authentication",{"_index":174,"title":{},"body":{"index.html":{}}}],["authenticationguard",{"_index":1,"title":{"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"index.html":{}}}],["authenticationservice",{"_index":19,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"index.html":{}}}],["available",{"_index":172,"title":{},"body":{"index.html":{},"modules.html":{}}}],["based",{"_index":175,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":114,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(null",{"_index":116,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":35,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["bootstrap",{"_index":230,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":227,"title":{},"body":{"modules.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["canactivate(route",{"_index":28,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canactivatechild",{"_index":10,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canactivatechild(childroute",{"_index":36,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canload",{"_index":11,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["canload(route",{"_index":40,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["certain",{"_index":180,"title":{},"body":{"index.html":{}}}],["change",{"_index":215,"title":{},"body":{"index.html":{}}}],["checkactivate",{"_index":13,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["checkactivate(route",{"_index":42,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["childroute",{"_index":38,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["class",{"_index":63,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{}}}],["clear",{"_index":95,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["command",{"_index":223,"title":{},"body":{"index.html":{}}}],["component",{"_index":187,"title":{},"body":{"index.html":{}}}],["componentclassname",{"_index":188,"title":{},"body":{"index.html":{}}}],["configure",{"_index":210,"title":{},"body":{"index.html":{}}}],["console.log('anonymous",{"_index":207,"title":{},"body":{"index.html":{}}}],["console.log('logged",{"_index":208,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(authenticationservice",{"_index":18,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(private",{"_index":67,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["core",{"_index":165,"title":{},"body":{"index.html":{}}}],["core.module.ts",{"_index":133,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["coverage",{"_index":145,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":192,"title":{},"body":{"index.html":{}}}],["data",{"_index":189,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":135,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"overview.html":{}}}],["default",{"_index":108,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["defined",{"_index":21,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["demo",{"_index":171,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":156,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":221,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":146,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":202,"title":{},"body":{"index.html":{}}}],["edit",{"_index":184,"title":{},"body":{"index.html":{}}}],["email",{"_index":141,"title":{},"body":{"interfaces/User.html":{},"index.html":{}}}],["example",{"_index":196,"title":{},"body":{"index.html":{}}}],["export",{"_index":62,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{}}}],["exports",{"_index":137,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"overview.html":{}}}],["false",{"_index":73,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["features",{"_index":170,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["first_allowed_role','second_allowed_role",{"_index":190,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":142,"title":{},"body":{"interfaces/User.html":{},"index.html":{}}}],["follow",{"_index":185,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":110,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["forbiddenredirecturl",{"_index":92,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getting",{"_index":162,"title":{"index.html":{}},"body":{}}],["github",{"_index":173,"title":{},"body":{"index.html":{}}}],["go",{"_index":182,"title":{},"body":{"index.html":{}}}],["graph",{"_index":226,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":0,"title":{"guards/AuthenticationGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["hasanyrole",{"_index":96,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasanyrole(roles",{"_index":100,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasrole",{"_index":97,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasrole(role",{"_index":104,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["here",{"_index":195,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":147,"title":{},"body":{"coverage.html":{}}}],["if(user",{"_index":206,"title":{},"body":{"index.html":{}}}],["implements",{"_index":64,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["import",{"_index":55,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{}}}],["import(\"@angular/router\").urltree",{"_index":68,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["import(\"rxjs\").observable",{"_index":69,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["imports",{"_index":136,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":89,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["install",{"_index":219,"title":{},"body":{"index.html":{}}}],["interface",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":139,"title":{},"body":{"interfaces/User.html":{}}}],["isauthenticated",{"_index":98,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["j.doe",{"_index":198,"title":{},"body":{"index.html":{}}}],["j.doe@domain.tld",{"_index":200,"title":{},"body":{"index.html":{}}}],["john",{"_index":201,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":143,"title":{},"body":{"interfaces/User.html":{},"index.html":{}}}],["legend",{"_index":229,"title":{},"body":{"overview.html":{}}}],["library",{"_index":167,"title":{},"body":{"index.html":{}}}],["login",{"_index":112,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["loginredirecturl",{"_index":93,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":87,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["models/user.model",{"_index":119,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["module",{"_index":128,"title":{"modules/NgxWvnCoreModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/NgxWvnCoreModule.html":{},"modules.html":{}}}],["name",{"_index":25,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["new",{"_index":115,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["ngmodule",{"_index":134,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["ngx",{"_index":164,"title":{},"body":{"index.html":{}}}],["ngxwvncoremodule",{"_index":129,"title":{"modules/NgxWvnCoreModule.html":{}},"body":{"modules/NgxWvnCoreModule.html":{},"modules.html":{}}}],["npm",{"_index":220,"title":{},"body":{"index.html":{}}}],["null",{"_index":121,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["optional",{"_index":27,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["order",{"_index":178,"title":{},"body":{"index.html":{}}}],["out",{"_index":234,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":228,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":155,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":23,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["path",{"_index":186,"title":{},"body":{"index.html":{}}}],["peer",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["phase",{"_index":194,"title":{},"body":{"index.html":{}}}],["private",{"_index":12,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["promise",{"_index":39,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["properties",{"_index":91,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["protect",{"_index":179,"title":{},"body":{"index.html":{}}}],["provide",{"_index":191,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":60,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["providers",{"_index":231,"title":{},"body":{"overview.html":{}}}],["queryparams",{"_index":83,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirect",{"_index":14,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirect(redirecturl",{"_index":46,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirectforbidden",{"_index":15,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirectforbidden(route",{"_index":51,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirection",{"_index":211,"title":{},"body":{"index.html":{}}}],["redirecturl",{"_index":49,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["required",{"_index":213,"title":{},"body":{"index.html":{}}}],["reset",{"_index":233,"title":{},"body":{"overview.html":{}}}],["result",{"_index":86,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":88,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["retrieve",{"_index":203,"title":{},"body":{"index.html":{}}}],["return",{"_index":65,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["returns",{"_index":34,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["returnurl",{"_index":84,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["role",{"_index":106,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["roles",{"_index":103,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"index.html":{}}}],["roles.some(r",{"_index":123,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["root",{"_index":61,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["route",{"_index":33,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["route.data",{"_index":74,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["route.data.redirectto",{"_index":79,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["route.data.roles",{"_index":75,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["router",{"_index":20,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["routerstatesnapshot",{"_index":31,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["routing",{"_index":183,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":118,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["s",{"_index":224,"title":{},"body":{"index.html":{}}}],["service",{"_index":204,"title":{},"body":{"index.html":{}}}],["services/authentication.service",{"_index":59,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["simply",{"_index":214,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts",{"_index":6,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:18",{"_index":32,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:22",{"_index":41,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:24",{"_index":22,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:29",{"_index":37,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:33",{"_index":43,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:37",{"_index":54,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:49",{"_index":52,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:56",{"_index":48,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/models/user.model.ts",{"_index":140,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/lib/authentication/services/authentication.service.ts",{"_index":90,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/lib/authentication/services/authentication.service.ts:10",{"_index":113,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:11",{"_index":111,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:13",{"_index":117,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:15",{"_index":107,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:19",{"_index":102,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:23",{"_index":105,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:27",{"_index":99,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/ngx",{"_index":131,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["started",{"_index":163,"title":{"index.html":{}},"body":{"index.html":{}}}],["startup",{"_index":193,"title":{},"body":{"index.html":{}}}],["state",{"_index":30,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["state.url",{"_index":85,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["statements",{"_index":148,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":47,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["table",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["test_role",{"_index":199,"title":{},"body":{"index.html":{}}}],["this.authenticationservice.clear();to",{"_index":209,"title":{},"body":{"index.html":{}}}],["this.authenticationservice.forbiddenredirecturl='/my/forbidden/page';getting",{"_index":218,"title":{},"body":{"index.html":{}}}],["this.authenticationservice.hasanyrole(route.data.roles",{"_index":76,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":71,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.authenticationservice.loginredirecturl='/my/login/page",{"_index":217,"title":{},"body":{"index.html":{}}}],["this.authenticationservice.user.next",{"_index":197,"title":{},"body":{"index.html":{}}}],["this.authenticationservice.user.subscribe(user",{"_index":205,"title":{},"body":{"index.html":{}}}],["this.checkactivate(route",{"_index":66,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.hasrole(r",{"_index":124,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.redirect(route.data.redirectto",{"_index":80,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirect(this.authenticationservice.forbiddenredirecturl",{"_index":81,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirect(this.authenticationservice.loginredirecturl",{"_index":72,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirectforbidden(route",{"_index":78,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.router.navigate([redirecturl",{"_index":82,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.user.next(null",{"_index":127,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value",{"_index":120,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value.roles",{"_index":122,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value.roles.indexof(role",{"_index":125,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.validateauthenticationrequirement(state",{"_index":70,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["true",{"_index":77,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["tslib",{"_index":160,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":26,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["undefined",{"_index":45,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["urls",{"_index":212,"title":{},"body":{"index.html":{}}}],["use",{"_index":181,"title":{},"body":{"index.html":{}}}],["user",{"_index":94,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["userid",{"_index":144,"title":{},"body":{"interfaces/User.html":{},"index.html":{}}}],["using",{"_index":222,"title":{},"body":{"index.html":{}}}],["validateauthenticationrequirement",{"_index":16,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validateauthenticationrequirement(state",{"_index":53,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validation",{"_index":177,"title":{},"body":{"index.html":{}}}],["value",{"_index":109,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["values",{"_index":216,"title":{},"body":{"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["wavenet",{"_index":166,"title":{},"body":{"index.html":{}}}],["wavenet/ngx",{"_index":225,"title":{},"body":{"index.html":{}}}],["wvn",{"_index":132,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"index.html":{}}}],["yes",{"_index":44,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["zoom",{"_index":232,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/authentication/guards/authentication.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                            \n                                canLoad\n                            \n                            \n                                    Private\n                                checkActivate\n                            \n                            \n                                    Private\n                                redirect\n                            \n                            \n                                    Private\n                                redirectForbidden\n                            \n                            \n                                    Private\n                                validateAuthenticationRequirement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/authentication/guards/authentication.guard.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childRoute\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean |  |  | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkActivate(route: Route | ActivatedRouteSnapshot, state?: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            Route | ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirect(redirectUrl: string, state?: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    redirectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirectForbidden\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectForbidden(route: Route | ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            Route | ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateAuthenticationRequirement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAuthenticationRequirement(state: RouterStateSnapshot, route: Route | ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n                                    \n                                            Route | ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\nimport {AuthenticationService} from \"../services/authentication.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanLoad, CanActivate, CanActivateChild {\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.checkActivate(route, state);\n  }\n\n  canLoad(route: Route): boolean {\n    return this.checkActivate(route);\n  }\n\n  constructor(private authenticationService: AuthenticationService, private router: Router) {\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable | Promise {\n    return this.validateAuthenticationRequirement(state, childRoute);\n  }\n\n  private checkActivate(route: Route | ActivatedRouteSnapshot, state?: RouterStateSnapshot): boolean | undefined {\n    return this.validateAuthenticationRequirement(state, route);\n  }\n\n  private validateAuthenticationRequirement(state: RouterStateSnapshot, route: Route | ActivatedRouteSnapshot) {\n    if (!this.authenticationService.isAuthenticated()) {\n      this.redirect(this.authenticationService.loginRedirectUrl, state);\n      return false;\n    }\n    if (!route.data || !route.data.roles || this.authenticationService.hasAnyRole(route.data.roles)) {\n      return true;\n    }\n    this.redirectForbidden(route, state);\n    return false;\n  }\n\n  private redirectForbidden(route: Route | ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (route.data.redirectTo) {\n      this.redirect(route.data.redirectTo, state);\n    }\n    this.redirect(this.authenticationService.forbiddenRedirectUrl, state);\n  }\n\n  private redirect(redirectUrl: string, state?: RouterStateSnapshot) {\n    if (state) {\n      this.router.navigate([redirectUrl], {queryParams: {returnUrl: state.url}});\n    } else {\n      this.router.navigate([redirectUrl]);\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/authentication/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forbiddenRedirectUrl\n                            \n                            \n                                loginRedirectUrl\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                hasAnyRole\n                            \n                            \n                                hasRole\n                            \n                            \n                                isAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasAnyRole\n                        \n                        \n                    \n                \n            \n            \n                \nhasAnyRole(roles: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRole\n                        \n                        \n                    \n                \n            \n            \n                \nhasRole(role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forbiddenRedirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/forbidden'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRedirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/login'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {User} from \"../models/user.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  loginRedirectUrl: string = '/login';\n  forbiddenRedirectUrl: string = '/forbidden';\n\n  user: BehaviorSubject = new BehaviorSubject(null);\n\n  isAuthenticated(): boolean {\n    return this.user.value != null;\n  };\n\n  hasAnyRole(roles: Array) {\n    return this.user.value && this.user.value.roles && roles.some(r => this.hasRole(r));\n  }\n\n  hasRole(role: string) {\n    return this.user.value && this.user.value.roles.indexOf(role) != -1;\n  }\n\n  clear() {\n    this.user.next(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxWvnCoreModule.html":{"url":"modules/NgxWvnCoreModule.html","title":"module - NgxWvnCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxWvnCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-wvn-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: []\n})\nexport class NgxWvnCoreModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/authentication/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                        roles\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n\n  userId: any;\n  roles: Array;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/authentication/guards/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/authentication/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/authentication/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : >=9.1.1\n        \n            @angular/core : >=9.1.1\n        \n            tslib : ^1.10.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-wvn-core\nWavenet core library for Angular application.\nFeatures\nDemo\nA demo application is available on GitHub.\nAuthentication\nRole-based route access validation\nIn order to protect a certain route of your application, you can use the AuthenticationGuard. Go to your routing module and edit the route as follow:  \n{\n    path: 'path-of-you-component',\n    component: ComponentClassName,\n    canLoad: [AuthenticationGuard],\n    canActivate: [AuthenticationGuard],\n    data: {\n      roles: ['FIRST_ALLOWED_ROLE','SECOND_ALLOWED_ROLE']\n    }\n  }You have to provide the current user to the AuthenticationService at startup or login phase of your application. Here is an example:\nthis.authenticationService.user.next({\n  userId: 'j.doe',\n  roles: ['TEST_ROLE'],\n  email: 'j.doe@domain.tld',\n  firstName: 'John',\n  lastName: 'Doe'\n})To retrieve the current user, use the service as follow:\nthis.authenticationService.user.subscribe(user => {\n  if(user == null){\n    console.log('anonymous');\n  }else{\n    console.log('logged');\n  }\n});To clear the current user, use the service as follow:\nthis.authenticationService.clear();To configure the redirection urls (login required and forbidden access), simply change the values of the service at application startup:\nthis.authenticationService.loginRedirectUrl='/my/login/page';\nthis.authenticationService.forbiddenRedirectUrl='/my/forbidden/page';Getting started\nInstall NPM dependency by using this command:\nnpm install -s @wavenet/ngx-wvn-core\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxWvnCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
