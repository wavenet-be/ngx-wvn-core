var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/guards/AuthenticationGuard.html",[0,1.127,1,1.127]],["body/guards/AuthenticationGuard.html",[0,0.764,1,1.281,2,0.93,3,0.371,4,0.565,5,0.371,6,0.299,7,0.71,8,0.371,9,0.945,10,2.608,11,2.344,12,2.608,13,2.571,14,2.397,15,1.556,16,1.556,17,0.71,18,0.93,19,1.193,20,3.139,21,1.819,22,0.93,23,1.188,24,0.764,25,1.188,26,1.819,27,0.083,28,1.819,29,1.193,30,1.471,31,1.188,32,1.188,33,1.556,34,1.188,35,1.213,36,1.556,37,1.556,38,3.61,39,4.031,40,3.781,41,0.93,42,2.151,43,1.819,44,3.215,45,2.82,46,1.714,47,2.153,48,2.82,49,2.286,50,1.556,51,0.93,52,2.005,53,1.556,54,1.556,55,0.93,56,1.556,57,1.219,58,0.93,59,0.945,60,1.79,61,1.556,62,0.945,63,0.93,64,1.188,65,1.556,66,0.93,67,1.556,68,1.188,69,1.556,70,0.93,71,1.556,72,1.188,73,1.556,74,1.556,75,1.188,76,1.556,77,0.93,78,0.93,79,0.457,80,0.71,81,0.93,82,0.93,83,0.565,84,0.93,85,0.71,86,1.556,87,1.556,88,0.93,89,0.93,90,0.457,91,0.93,92,0.985,93,0.499,94,0.371,95,0.93,96,0.93,97,0.71,98,0.71,99,0.371,100,0.457,101,0.71,102,2.194,103,0.71,104,1.714,105,1.556,106,0.93,107,0.93,108,0.93,109,0.93,110,0.93,111,1.556,112,0.93,113,0.93,114,0.93,115,0.93,116,0.93,117,0.93,118,0.93,119,1.556,120,0.93,121,0.93,122,0.93,123,0.017,124,0.028,125,0.017]],["title/injectables/AuthenticationService.html",[19,0.914,93,0.736]],["body/injectables/AuthenticationService.html",[3,0.479,4,0.731,5,0.479,6,0.386,8,0.479,9,1.166,14,2.087,19,0.765,21,2.031,24,0.943,26,1.166,27,0.082,28,1.166,29,1.19,30,0.943,31,1.465,32,1.829,34,2.281,35,1.375,42,1.661,43,1.935,46,1.661,47,0.918,49,2.431,57,2.031,59,2.109,60,2.087,64,0.918,68,2.281,75,2.431,79,0.943,80,1.465,85,1.465,90,1.758,92,1.177,93,0.616,94,0.479,97,0.918,98,0.918,99,0.479,100,0.591,102,1.166,104,1.935,123,0.022,124,0.035,125,0.022,126,1.203,127,0.918,128,1.465,129,2.395,130,2.395,131,3.185,132,1.919,133,1.919,134,2.734,135,1.203,136,1.919,137,1.829,138,1.203,139,3.185,140,2.734,141,1.919,142,1.203,143,2.801,144,1.203,145,2.395,146,1.829,147,1.203,148,2.734,149,1.919,150,2.734,151,1.203,152,2.395,153,1.919,154,1.203,155,0.918,156,1.919,157,1.203,158,0.918,159,1.203,160,1.203,161,0.918,162,1.203,163,1.203,164,0.918,165,1.203,166,0.918,167,1.203,168,0.918,169,1.203,170,1.203,171,1.203,172,1.203,173,1.465,174,1.203,175,1.203,176,1.203,177,0.918,178,1.203,179,1.203,180,0.918,181,0.918,182,1.203,183,1.203,184,1.203,185,1.203,186,1.203,187,1.203,188,2.395,189,1.203,190,1.203,191,1.203,192,1.203,193,0.731,194,1.203,195,1.203]],["title/modules/NgxWvnCoreModule.html",[83,1.394,196,1.394]],["body/modules/NgxWvnCoreModule.html",[3,1.237,5,1.237,6,0.997,27,0.081,92,1.526,94,1.237,99,1.237,100,1.526,123,0.056,124,0.068,125,0.056,196,2.282,197,1.887,198,3.106,199,2.371,200,3.106,201,3.756,202,2.371,203,3.106,204,2.371]],["title/interfaces/User.html",[35,0.736,205,1.127]],["body/interfaces/User.html",[3,0.913,5,0.913,6,0.735,8,0.913,27,0.083,29,1.558,30,1.98,35,0.992,57,2.579,72,2.36,90,1.98,99,0.913,123,0.042,124,0.056,125,0.042,128,2.36,137,2.671,161,2.86,164,3.077,166,3.077,168,3.077,205,1.126,206,2.291,207,1.749,208,3.091,209,2.36,210,3.091]],["title/interceptors/UtcDateTransformInterceptor.html",[211,1.394,212,1.127]],["body/interceptors/UtcDateTransformInterceptor.html",[3,0.575,4,0.877,5,0.575,6,0.463,8,0.575,9,1.345,13,2.056,17,1.102,21,1.637,23,1.69,24,1.088,26,1.637,27,0.083,28,1.637,29,0.882,30,1.323,42,1.345,43,0.877,59,1.345,79,0.709,92,1.323,93,0.711,94,0.575,99,0.575,100,0.709,101,1.102,102,1.835,103,1.102,104,1.637,123,0.026,124,0.04,125,0.026,146,2.056,155,1.102,173,1.102,177,1.102,181,1.102,193,0.877,211,1.345,212,1.484,213,1.443,214,2.306,215,1.814,216,1.102,217,2.214,218,3.021,219,2.214,220,1.443,221,3.021,222,1.443,223,2.487,224,2.214,225,2.693,226,2.214,227,1.443,228,3.021,229,3.021,230,3.932,231,2.214,232,3.021,233,3.021,234,3.021,235,1.443,236,2.056,237,2.056,238,3.021,239,3.021,240,2.214,241,1.443,242,1.443,243,1.102,244,1.443,245,1.69,246,1.443,247,1.443,248,1.443,249,1.443,250,1.443,251,2.214,252,1.443,253,1.102,254,2.214,255,1.443,256,1.443,257,1.443,258,2.214,259,2.214,260,2.214,261,1.443,262,1.443,263,2.214,264,1.443,265,1.443,266,1.443,267,2.214,268,2.214,269,1.443,270,1.443]],["title/coverage.html",[271,2.362]],["body/coverage.html",[0,1.446,1,1.446,6,0.945,7,2.247,19,1.172,24,1.446,27,0.078,29,1.172,35,0.945,93,0.945,123,0.053,124,0.066,125,0.053,127,2.247,205,1.446,207,2.247,209,2.247,211,1.789,212,1.446,214,2.247,215,1.446,216,2.247,271,2.247,272,2.247,273,2.943,274,3.635,275,3.635,276,2.943,277,2.943,278,2.943,279,2.943,280,2.943,281,2.943]],["title/dependencies.html",[282,1.933,283,1.67]],["body/dependencies.html",[27,0.079,94,1.323,123,0.06,124,0.071,125,0.06,253,2.536,283,2.018,284,3.322,285,3.91,286,3.322,287,3.322]],["title/index.html",[8,0.77,288,1.476,289,1.476]],["body/index.html",[27,0.065,79,1.77,123,0.053,124,0.065,125,0.053,158,2.751,199,2.751,272,2.992,288,2.216,289,2.216,290,2.902,291,3.919,292,2.902,293,2.902,294,2.902,295,2.902,296,2.751,297,1.763,298,1.763,299,2.902,300,2.902,301,2.902,302,2.902,303,3.603,304,3.603,305,3.603,306,2.902,307,2.902,308,2.902,309,2.902,310,2.902]],["title/modules.html",[197,1.88]],["body/modules.html",[27,0.072,123,0.062,124,0.072,125,0.062,196,2.085,197,2.085,296,2.62,311,3.432,312,3.432]],["title/overview.html",[313,2.362]],["body/overview.html",[0,1.557,27,0.069,83,2.31,93,1.017,123,0.058,124,0.069,125,0.058,193,2.567,202,2.419,204,2.419,205,1.557,245,2.419,283,1.926,313,2.419,314,3.169,315,3.169,316,3.802,317,3.169,318,3.169]],["title/additional-documentation/authentication.html",[25,1.476,62,1.175,298,1.175]],["body/additional-documentation/authentication.html",[1,1.581,19,1.282,27,0.07,35,1.232,44,2.93,46,1.956,90,1.581,123,0.058,124,0.07,125,0.058,143,2.457,180,2.93,297,1.956,319,3.837,320,3.837,321,2.457]],["title/additional-documentation/date.html",[62,1.175,215,0.95,298,1.175]],["body/additional-documentation/date.html",[27,0.072,123,0.061,124,0.072,125,0.061,212,1.659,215,1.659,223,2.577,236,2.577,237,2.577,243,2.577,297,2.051,321,2.577]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{}}}],["0",{"_index":268,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["1",{"_index":193,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"overview.html":{}}}],["1.10.0",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["2.0",{"_index":267,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["3/4",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["9.1.1",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":180,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/authentication.html":{}}}],["activatedroutesnapshot",{"_index":38,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["additional",{"_index":298,"title":{"additional-documentation/authentication.html":{},"additional-documentation/date.html":{}},"body":{"index.html":{}}}],["address",{"_index":208,"title":{},"body":{"interfaces/User.html":{}}}],["angular",{"_index":294,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":253,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":252,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["angular/core",{"_index":94,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"dependencies.html":{}}}],["angular/router",{"_index":95,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["application",{"_index":79,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"index.html":{}}}],["appmodule",{"_index":247,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["array",{"_index":137,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["authenticated",{"_index":75,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":25,"title":{"additional-documentation/authentication.html":{}},"body":{"guards/AuthenticationGuard.html":{}}}],["authenticationguard",{"_index":1,"title":{"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"additional-documentation/authentication.html":{}}}],["authenticationservice",{"_index":19,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"additional-documentation/authentication.html":{}}}],["available",{"_index":296,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":242,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["based",{"_index":319,"title":{},"body":{"additional-documentation/authentication.html":{}}}],["behaviorsubject",{"_index":152,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(null",{"_index":153,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["body",{"_index":230,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["body[key",{"_index":263,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["bootstrap",{"_index":315,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":312,"title":{},"body":{"modules.html":{}}}],["canactivate",{"_index":10,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canactivate(route",{"_index":37,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canactivatechild",{"_index":11,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canactivatechild(childroute",{"_index":50,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canload",{"_index":12,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["canload(route",{"_index":54,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["case",{"_index":67,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["certain",{"_index":78,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["change",{"_index":182,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["check",{"_index":139,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["childroute",{"_index":52,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["class",{"_index":100,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["classes",{"_index":321,"title":{},"body":{"additional-documentation/authentication.html":{},"additional-documentation/date.html":{}}}],["clear",{"_index":131,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["clear():void",{"_index":194,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["command",{"_index":308,"title":{},"body":{"index.html":{}}}],["component",{"_index":87,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["componentclassname",{"_index":88,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["configuration",{"_index":76,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["configure",{"_index":177,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["console.log('anonymous",{"_index":174,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('logged",{"_index":175,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["const",{"_index":260,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["constructor(authenticationservice",{"_index":18,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(pipe",{"_index":220,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["convert",{"_index":228,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["convertdates",{"_index":217,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["convertdates(body",{"_index":226,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["core",{"_index":291,"title":{},"body":{"index.html":{}}}],["core.module.ts",{"_index":200,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["coverage",{"_index":271,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":23,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["current",{"_index":34,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["data",{"_index":89,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["date",{"_index":215,"title":{"additional-documentation/date.html":{}},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"additional-documentation/date.html":{}}}],["dates",{"_index":229,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["decimalpipe",{"_index":221,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["declarations",{"_index":202,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"overview.html":{}}}],["default",{"_index":145,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["defined",{"_index":21,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["demo",{"_index":303,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":283,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":306,"title":{},"body":{"index.html":{}}}],["description",{"_index":31,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["documentation",{"_index":272,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":169,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["during",{"_index":244,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["edit",{"_index":84,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["email",{"_index":164,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["example",{"_index":159,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["explanations",{"_index":302,"title":{},"body":{"index.html":{}}}],["export",{"_index":99,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["exports",{"_index":204,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"overview.html":{}}}],["false",{"_index":111,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["feature",{"_index":300,"title":{},"body":{"index.html":{}}}],["file",{"_index":6,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["first_allowed_role','second_allowed_role",{"_index":91,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["firstname",{"_index":166,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["follow",{"_index":85,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["forbidden",{"_index":68,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["forbiddenredirecturl",{"_index":129,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getting",{"_index":288,"title":{"index.html":{}},"body":{"index.html":{}}}],["given",{"_index":59,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["go",{"_index":81,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["graph",{"_index":311,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":0,"title":{"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["hasanyrole",{"_index":132,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasanyrole(roles",{"_index":136,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasrole",{"_index":133,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasrole(role",{"_index":141,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["here",{"_index":158,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["http",{"_index":236,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"additional-documentation/date.html":{}}}],["http_interceptors",{"_index":248,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["httphandler",{"_index":234,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["httpinterceptor",{"_index":251,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["httprequest",{"_index":232,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["identifier",{"_index":209,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["identity",{"_index":36,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["if(user",{"_index":172,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["implements",{"_index":101,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["import",{"_index":92,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["import(\"@angular/router\").urltree",{"_index":107,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["import(\"rxjs\").observable",{"_index":108,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["imports",{"_index":203,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["injectable",{"_index":93,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["install",{"_index":304,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":264,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["intercept",{"_index":218,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["intercept(req",{"_index":231,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["interceptor",{"_index":211,"title":{"interceptors/UtcDateTransformInterceptor.html":{}},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":213,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["interface",{"_index":205,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":206,"title":{},"body":{"interfaces/User.html":{}}}],["isauthenticated",{"_index":134,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["j.doe",{"_index":162,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["j.doe@domain.tld",{"_index":165,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["john",{"_index":167,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["key",{"_index":261,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["lastname",{"_index":168,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["legend",{"_index":314,"title":{},"body":{"overview.html":{}}}],["level",{"_index":301,"title":{},"body":{"index.html":{}}}],["library",{"_index":293,"title":{},"body":{"index.html":{}}}],["logged",{"_index":46,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"additional-documentation/authentication.html":{}}}],["login",{"_index":150,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginredirecturl",{"_index":130,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":124,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{}}}],["menu",{"_index":299,"title":{},"body":{"index.html":{}}}],["methods",{"_index":9,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["missing",{"_index":149,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["models/user.model",{"_index":187,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["module",{"_index":83,"title":{"modules/NgxWvnCoreModule.html":{}},"body":{"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["modules",{"_index":197,"title":{"modules.html":{}},"body":{"modules/NgxWvnCoreModule.html":{},"modules.html":{}}}],["multi",{"_index":250,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["name",{"_index":28,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["new",{"_index":24,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["next",{"_index":233,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["next.handle(req",{"_index":256,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["ngmodule",{"_index":201,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["ngx",{"_index":290,"title":{},"body":{"index.html":{}}}],["ngxwvncoremodule",{"_index":196,"title":{"modules/NgxWvnCoreModule.html":{}},"body":{"modules/NgxWvnCoreModule.html":{},"modules.html":{}}}],["npm",{"_index":305,"title":{},"body":{"index.html":{}}}],["null",{"_index":173,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["object",{"_index":259,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["object.keys(body",{"_index":262,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["optional",{"_index":30,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["order",{"_index":241,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["out",{"_index":318,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":313,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":282,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":62,"title":{"additional-documentation/authentication.html":{},"additional-documentation/date.html":{}},"body":{"guards/AuthenticationGuard.html":{}}}],["param",{"_index":102,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["path",{"_index":86,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["peer",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["phase",{"_index":157,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipe",{"_index":225,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["post",{"_index":238,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["private",{"_index":13,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["promise",{"_index":53,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["properties",{"_index":128,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["protect",{"_index":77,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["protected",{"_index":45,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["provide",{"_index":155,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["providedin",{"_index":97,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["providers",{"_index":245,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"overview.html":{}}}],["providing",{"_index":33,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["public",{"_index":219,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["put",{"_index":239,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["queryparams",{"_index":120,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["readme",{"_index":4,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["redirect",{"_index":14,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["redirect(redirecturl",{"_index":56,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirectforbidden",{"_index":15,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirectforbidden(route",{"_index":65,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirection",{"_index":178,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["redirecturl",{"_index":61,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["regarding",{"_index":74,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["req",{"_index":240,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["req.method",{"_index":254,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["request",{"_index":237,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"additional-documentation/date.html":{}}}],["required",{"_index":47,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["requirements",{"_index":73,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["reset",{"_index":317,"title":{},"body":{"overview.html":{}}}],["result",{"_index":123,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{}}}],["results",{"_index":125,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{}}}],["retrieve",{"_index":170,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["return",{"_index":104,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["returns",{"_index":42,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["returnurl",{"_index":121,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["role",{"_index":143,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/authentication.html":{}}}],["role(s",{"_index":48,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["roles",{"_index":90,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"additional-documentation/authentication.html":{}}}],["roles.some(r",{"_index":190,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["root",{"_index":98,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["route",{"_index":44,"title":{},"body":{"guards/AuthenticationGuard.html":{},"additional-documentation/authentication.html":{}}}],["route.data",{"_index":112,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["route.data.redirectto",{"_index":116,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["route.data.roles",{"_index":113,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["router",{"_index":20,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["routerstatesnapshot",{"_index":40,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["routing",{"_index":82,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["rxjs",{"_index":186,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["s",{"_index":309,"title":{},"body":{"index.html":{}}}],["section",{"_index":246,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["security",{"_index":72,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interfaces/User.html":{}}}],["see",{"_index":297,"title":{},"body":{"index.html":{},"additional-documentation/authentication.html":{},"additional-documentation/date.html":{}}}],["service",{"_index":32,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["services/authentication.service",{"_index":96,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["simply",{"_index":181,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["source",{"_index":5,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/NgxWvnCoreModule.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts",{"_index":7,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:16",{"_index":22,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:32",{"_index":41,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:40",{"_index":55,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:49",{"_index":51,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:58",{"_index":70,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:75",{"_index":66,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/guards/authentication.guard.ts:87",{"_index":58,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/lib/authentication/models/user.model.ts",{"_index":207,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/lib/authentication/services/authentication.service.ts",{"_index":127,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/lib/authentication/services/authentication.service.ts:13",{"_index":151,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:17",{"_index":147,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:22",{"_index":154,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:28",{"_index":144,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:37",{"_index":138,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:46",{"_index":142,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/authentication/services/authentication.service.ts:53",{"_index":135,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/lib/date/interceptor/utc",{"_index":214,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["src/lib/ngx",{"_index":198,"title":{},"body":{"modules/NgxWvnCoreModule.html":{}}}],["started",{"_index":289,"title":{"index.html":{}},"body":{"index.html":{}}}],["startup",{"_index":156,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["state",{"_index":39,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["state.url",{"_index":122,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["statements",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":57,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["table",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":140,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["test_role",{"_index":163,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.clear();to",{"_index":176,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.forbiddenredirecturl='/my/forbidden/page",{"_index":185,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.hasanyrole(route.data.roles",{"_index":114,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":109,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.authenticationservice.loginredirecturl='/my/login/page",{"_index":184,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.user.next",{"_index":160,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticationservice.user.subscribe(user",{"_index":171,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.convertdates(req.body",{"_index":255,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["this.convertdates(value",{"_index":270,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["this.hasrole(r",{"_index":191,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.pipe.transform(value.getdate",{"_index":269,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["this.pipe.transform(value.getmonth",{"_index":266,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["this.redirect(route.data.redirectto",{"_index":117,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirect(this.authenticationservice.forbiddenredirecturl",{"_index":118,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirect(this.authenticationservice.loginredirecturl",{"_index":110,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.redirectforbidden(route",{"_index":115,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.router.navigate([redirecturl",{"_index":119,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.user.next(null",{"_index":195,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value",{"_index":188,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value.roles",{"_index":189,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value.roles.indexof(role",{"_index":192,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.validateauthenticationrequirement(state",{"_index":105,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validateauthenticationrequirement(undefined",{"_index":106,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["transform",{"_index":224,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["transform.interceptor.ts",{"_index":216,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["transform.interceptor.ts:20",{"_index":235,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["transform.interceptor.ts:31",{"_index":227,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["transform.interceptor.ts:6",{"_index":222,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["transformation",{"_index":243,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"additional-documentation/date.html":{}}}],["true",{"_index":43,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["tslib",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":29,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{}}}],["typeof",{"_index":258,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["undefined",{"_index":257,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["url",{"_index":60,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["urls",{"_index":179,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["use",{"_index":80,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["useclass",{"_index":249,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["used",{"_index":148,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user",{"_index":35,"title":{"interfaces/User.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/authentication.html":{}}}],["userid",{"_index":161,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["username",{"_index":210,"title":{},"body":{"interfaces/User.html":{}}}],["using",{"_index":307,"title":{},"body":{"index.html":{}}}],["utc",{"_index":223,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"additional-documentation/date.html":{}}}],["utcdatetransforminterceptor",{"_index":212,"title":{"interceptors/UtcDateTransformInterceptor.html":{}},"body":{"interceptors/UtcDateTransformInterceptor.html":{},"coverage.html":{},"additional-documentation/date.html":{}}}],["validate",{"_index":71,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validateauthenticationrequirement",{"_index":16,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validateauthenticationrequirement(state",{"_index":69,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validation",{"_index":320,"title":{},"body":{"additional-documentation/authentication.html":{}}}],["value",{"_index":146,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/UtcDateTransformInterceptor.html":{}}}],["value.getfullyear",{"_index":265,"title":{},"body":{"interceptors/UtcDateTransformInterceptor.html":{}}}],["values",{"_index":183,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["void",{"_index":64,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["wavenet",{"_index":292,"title":{},"body":{"index.html":{}}}],["wavenet/ngx",{"_index":310,"title":{},"body":{"index.html":{}}}],["website",{"_index":295,"title":{},"body":{"index.html":{}}}],["wvn",{"_index":199,"title":{},"body":{"modules/NgxWvnCoreModule.html":{},"index.html":{}}}],["yes",{"_index":63,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["zoom",{"_index":316,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/authentication/guards/authentication.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                            \n                                canLoad\n                            \n                            \n                                    Private\n                                redirect\n                            \n                            \n                                    Private\n                                redirectForbidden\n                            \n                            \n                                    Private\n                                validateAuthenticationRequirement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/authentication/guards/authentication.guard.ts:16\n                            \n                        \n\n                \n                    \n                            Create a new authentication guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service providing current user identity\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:32\n                \n            \n\n\n            \n                \n                    Returns true if the route is not protected or if the user is logged and has required role(s)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:49\n                \n            \n\n\n            \n                \n                    Returns true if the route is not protected or if the user is logged and has required role(s)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childRoute\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean |  |  | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:40\n                \n            \n\n\n            \n                \n                    Returns true if the route is not protected or if the user is logged and has required role(s)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirect(redirectUrl: string, state?: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:87\n                \n            \n\n\n            \n                \n                    Redirect the user to the given url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    redirectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        url of the page to which redirect the user\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            redirectForbidden\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    redirectForbidden(route: Route | ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:75\n                \n            \n\n\n            \n                \n                    Redirect in case the user is forbidden\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            Route | ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateAuthenticationRequirement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAuthenticationRequirement(state: RouterStateSnapshot, route: Route | ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/guards/authentication.guard.ts:58\n                \n            \n\n\n            \n                \n                    Validate security requirements regarding authenticated user and route configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n                                    \n                                            Route | ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n        \n            To protect a certain route of your application, you can use the AuthenticationGuard. Go to your routing module and edit the route as follow:  \n{\n    path: 'path-of-you-component',\n    component: ComponentClassName,\n    canLoad: [AuthenticationGuard],\n    canActivate: [AuthenticationGuard],\n    data: {\n      roles: ['FIRST_ALLOWED_ROLE','SECOND_ALLOWED_ROLE']\n    }\n  }\n        \n\n        \n            import {Injectable} from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\nimport {AuthenticationService} from \"../services/authentication.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanLoad, CanActivate, CanActivateChild {\n\n  /**\n   * Create a new authentication guard\n   * @param authenticationService service providing current user identity\n   * @param router\n   */\n  constructor(private authenticationService: AuthenticationService, private router: Router) {\n\n  }\n\n  /**\n   * Returns true if the route is not protected or if the user is logged and has required role(s)\n   * @param route\n   * @param state\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.validateAuthenticationRequirement(state, route);\n  }\n\n  /**\n   * Returns true if the route is not protected or if the user is logged and has required role(s)\n   * @param route\n   */\n  canLoad(route: Route): boolean {\n    return this.validateAuthenticationRequirement(undefined, route);\n  }\n\n  /**\n   * Returns true if the route is not protected or if the user is logged and has required role(s)\n   * @param childRoute\n   * @param state\n   */\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable | Promise {\n    return this.validateAuthenticationRequirement(state, childRoute);\n  }\n\n  /**\n   * Validate security requirements regarding authenticated user and route configuration\n   * @param state\n   * @param route\n   */\n  private validateAuthenticationRequirement(state: RouterStateSnapshot, route: Route | ActivatedRouteSnapshot) {\n    if (!this.authenticationService.isAuthenticated()) {\n      this.redirect(this.authenticationService.loginRedirectUrl, state);\n      return false;\n    }\n    if (!route.data || !route.data.roles || this.authenticationService.hasAnyRole(route.data.roles)) {\n      return true;\n    }\n    this.redirectForbidden(route, state);\n    return false;\n  }\n\n  /**\n   * Redirect in case the user is forbidden\n   * @param route\n   * @param state\n   */\n  private redirectForbidden(route: Route | ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (route.data.redirectTo) {\n      this.redirect(route.data.redirectTo, state);\n    }\n    this.redirect(this.authenticationService.forbiddenRedirectUrl, state);\n  }\n\n  /**\n   * Redirect the user to the given url\n   * @param redirectUrl url of the page to which redirect the user\n   * @param state\n   */\n  private redirect(redirectUrl: string, state?: RouterStateSnapshot) {\n    if (state) {\n      this.router.navigate([redirectUrl], {queryParams: {returnUrl: state.url}});\n    } else {\n      this.router.navigate([redirectUrl]);\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/authentication/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forbiddenRedirectUrl\n                            \n                            \n                                loginRedirectUrl\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                hasAnyRole\n                            \n                            \n                                hasRole\n                            \n                            \n                                isAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:53\n                \n            \n\n\n            \n                \n                    Clear the current logged user if any\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasAnyRole\n                        \n                        \n                    \n                \n            \n            \n                \nhasAnyRole(roles: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:37\n                \n            \n\n\n            \n                \n                    Check if a user has a any of given roles\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the roles to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the user has any of the given roles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRole\n                        \n                        \n                    \n                \n            \n            \n                \nhasRole(role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:46\n                \n            \n\n\n            \n                \n                    Check if a user has a given role\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the role to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the user has the given role\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/authentication/services/authentication.service.ts:28\n                \n            \n\n\n            \n                \n                    Check if the user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the user is authenticated\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forbiddenRedirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/forbidden'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                        Url used to redirect the user when forbidden (missing role)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRedirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/login'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                        Url used to redirect the user when not authenticated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/authentication/services/authentication.service.ts:22\n                            \n                        \n\n                \n                    \n                        Logged user\n\n                    \n                \n\n            \n        \n\n\n    \n\n    \n        You have to provide the current user at startup or login phase of your application. Here is an example:\nthis.authenticationService.user.next({\n  userId: 'j.doe',\n  roles: ['TEST_ROLE'],\n  email: 'j.doe@domain.tld',\n  firstName: 'John',\n  lastName: 'Doe'\n})To retrieve the current user, use the service as follow:\nthis.authenticationService.user.subscribe(user => {\n  if(user == null){\n    console.log('anonymous');\n  }else{\n    console.log('logged');\n  }\n});To clear the current user, use the service as follow:\nthis.authenticationService.clear();To configure the redirection urls (login required and forbidden access), simply change the values of the service at application startup:\nthis.authenticationService.loginRedirectUrl='/my/login/page';\nthis.authenticationService.forbiddenRedirectUrl='/my/forbidden/page';\n    \n\n    \n        import {Injectable} from \"@angular/core\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {User} from \"../models/user.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Url used to redirect the user when not authenticated\n   */\n  loginRedirectUrl: string = '/login';\n  /**\n   * Url used to redirect the user when forbidden (missing role)\n   */\n  forbiddenRedirectUrl: string = '/forbidden';\n\n  /**\n   * Logged user\n   */\n  user: BehaviorSubject = new BehaviorSubject(null);\n\n  /**\n   * Check if the user is authenticated\n   * @return true if the user is authenticated\n   */\n  isAuthenticated(): boolean {\n    return this.user.value != null;\n  };\n\n  /**\n   * Check if a user has a any of given roles\n   * @param roles the roles to test\n   * @return true if the user has any of the given roles\n   */\n  hasAnyRole(roles: Array) : boolean{\n    return this.user.value && this.user.value.roles && roles.some(r => this.hasRole(r));\n  }\n\n  /**\n   * Check if a user has a given role\n   * @param role the role to test\n   * @return true if the user has the given role\n   */\n  hasRole(role: string) : boolean{\n    return this.user.value && this.user.value.roles.indexOf(role) != -1;\n  }\n\n  /**\n   * Clear the current logged user if any\n   */\n  clear():void{\n    this.user.next(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxWvnCoreModule.html":{"url":"modules/NgxWvnCoreModule.html","title":"module - NgxWvnCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxWvnCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-wvn-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: []\n})\nexport class NgxWvnCoreModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/authentication/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                        roles\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Firstname\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Lastname\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Security roles\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier / Username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n\n  /**\n   * Identifier / Username\n   */\n  userId: any;\n  /**\n   * Security roles\n   */\n  roles: Array;\n  /**\n   * Email address\n   */\n  email?: string;\n  /**\n   * Firstname\n   */\n  firstName?: string;\n  /**\n   * Lastname\n   */\n  lastName?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/UtcDateTransformInterceptor.html":{"url":"interceptors/UtcDateTransformInterceptor.html","title":"interceptor - UtcDateTransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  UtcDateTransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/date/interceptor/utc-date-transform.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertDates\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(pipe: DecimalPipe)\n                    \n                \n                        \n                            \n                                Defined in src/lib/date/interceptor/utc-date-transform.interceptor.ts:6\n                            \n                        \n\n                \n                    \n                            Create a new UTC date transform interceptor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pipe\n                                                  \n                                                        \n                                                                        DecimalPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertDates(body)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/date/interceptor/utc-date-transform.interceptor.ts:31\n                \n            \n\n\n            \n                \n                    Convert dates in the given body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/date/interceptor/utc-date-transform.interceptor.ts:20\n                \n            \n\n\n            \n                \n                    Intercept the HTTP request (POST & PUT) and convert UTC dates in body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n        In order to avoid UTC date transformation during http request (PUT & POST), simply configure the UtcDateTransformInterceptor in the providers section of the AppModule of your application.\n    providers: [\n        ...\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: UtcDateTransformInterceptor,\n            multi: true\n        }\n        ...\n    ]\n    \n\n    \n        import {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\n\n@Injectable()\nexport class UtcDateTransformInterceptor implements HttpInterceptor {\n\n  /**\n   * Create a new UTC date transform interceptor\n   * @param pipe\n   */\n  public constructor(private pipe: DecimalPipe) {\n  }\n\n  /**\n   * Intercept the HTTP request (POST & PUT) and convert UTC dates in body\n   * @param req\n   * @param next\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    if (req.method === 'POST' || req.method === 'PUT') {\n      this.convertDates(req.body);\n    }\n    return next.handle(req);\n  }\n\n  /**\n   * Convert dates in the given body\n   * @param body\n   */\n  private convertDates(body) {\n    if (body === null || body === undefined) {\n      return body;\n    }\n\n    if (typeof body !== 'object') {\n      return body;\n    }\n\n    for (const key of Object.keys(body)) {\n      const value = body[key];\n      if (value instanceof Date) {\n        body[key] = `${value.getFullYear()}-${this.pipe.transform(value.getMonth() + 1, \"2.0-0\")}-${this.pipe.transform(value.getDate(), \"2.0-0\")}`;\n      } else if (typeof value === 'object') {\n        this.convertDates(value);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/authentication/guards/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/lib/authentication/models/user.model.ts\n            \n            interface\n            User\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/lib/authentication/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/lib/date/interceptor/utc-date-transform.interceptor.ts\n            \n            interceptor\n            UtcDateTransformInterceptor\n            \n                75 %\n                (3/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : >=9.1.1\n        \n            @angular/core : >=9.1.1\n        \n            tslib : ^1.10.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-wvn-core\nWavenet core library for Angular application.\nDocumentation\nA documentation website is available here. See Additional documentation menu for feature level explanations.\nDemo\nA demo application is available here.\nGetting started\nInstall NPM dependency by using this command:\nnpm install -s @wavenet/ngx-wvn-core\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxWvnCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authentication.html":{"url":"additional-documentation/authentication.html","title":"additional-page - Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRole-based route access validation\nRoute access validation based on roles of logged user. See classes:\n\nUser\nAuthenticationGuard\nAuthenticationService\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/date.html":{"url":"additional-documentation/date.html","title":"additional-page - Date","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nUTC Date transformation in HTTP request\nSee classes:\n\nUtcDateTransformInterceptor\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
